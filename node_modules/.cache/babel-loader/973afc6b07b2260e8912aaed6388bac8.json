{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{clearIndex}from'../actions/Edit';import{hideForm}from'../actions/Form';import FormikComponent from'./FormField';function FormWrapper(props){console.log(props.userIndexToEdit);var showForm=props.state.display?\"show\":\"hide\";var hideFormParent=function hideFormParent(e){if(e.target.dataset.name==='parent'){props.hideForm();props.clearIndex();}};var ln=props.allUsers.users.length+1;console.log(ln);var FormikMount=function FormikMount(){if(props.userIndexToEdit!=undefined&&props.writeMode==='edit_mode'){return React.createElement(FormikComponent,{first_name:props.allUsers.users[props.userIndexToEdit].first_name,last_name:props.allUsers.users[props.userIndexToEdit].last_name,id:props.allUsers.users[props.userIndexToEdit].id});}else if(props.userIndexToEdit===undefined&&props.writeMode==='add_mode'){return React.createElement(FormikComponent,{first_name:\"\",last_name:\"\",id:ln});}else{return null;}};return React.createElement(\"div\",{\"data-name\":\"parent\",className:\"form-wrapper-fixed \"+showForm,onClick:hideFormParent},React.createElement(\"div\",{className:\"form-container\"},FormikMount()));};var mapStateToProps=function mapStateToProps(store){return{state:store.formDisplayReducer,allUsers:store.usersReducer,userIndexToEdit:store.editUserReducer.userIndexToEdit,writeMode:store.editUserReducer.writeMode};};export default connect(mapStateToProps,{hideForm:hideForm,clearIndex:clearIndex})(FormWrapper);","map":{"version":3,"sources":["/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/component/FormWrapper.js"],"names":["React","connect","clearIndex","hideForm","FormikComponent","FormWrapper","props","console","log","userIndexToEdit","showForm","state","display","hideFormParent","e","target","dataset","name","ln","allUsers","users","length","FormikMount","undefined","writeMode","first_name","last_name","id","mapStateToProps","store","formDisplayReducer","usersReducer","editUserReducer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACxBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,eAAlB,EACA,GAAMC,CAAAA,QAAQ,CAAGJ,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAsB,MAAtB,CAA+B,MAAhD,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC1B,GAAGA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,IAAjB,GAA0B,QAA7B,CAAsC,CAClCX,KAAK,CAACH,QAAN,GACAG,KAAK,CAACJ,UAAN,GACH,CACJ,CALD,CAOA,GAAMgB,CAAAA,EAAE,CAAGZ,KAAK,CAACa,QAAN,CAAeC,KAAf,CAAqBC,MAArB,CAA8B,CAAzC,CACAd,OAAO,CAACC,GAAR,CAAYU,EAAZ,EACA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAGhB,KAAK,CAACG,eAAN,EAAyBc,SAAzB,EAAsCjB,KAAK,CAACkB,SAAN,GAAoB,WAA7D,CAAyE,CACrE,MACI,qBAAC,eAAD,EACI,UAAU,CAAElB,KAAK,CAACa,QAAN,CAAeC,KAAf,CAAqBd,KAAK,CAACG,eAA3B,EAA4CgB,UAD5D,CAEI,SAAS,CAAEnB,KAAK,CAACa,QAAN,CAAeC,KAAf,CAAqBd,KAAK,CAACG,eAA3B,EAA4CiB,SAF3D,CAGI,EAAE,CAAEpB,KAAK,CAACa,QAAN,CAAeC,KAAf,CAAqBd,KAAK,CAACG,eAA3B,EAA4CkB,EAHpD,EADJ,CAOH,CARD,IAQM,IAAGrB,KAAK,CAACG,eAAN,GAA0Bc,SAA1B,EAAuCjB,KAAK,CAACkB,SAAN,GAAoB,UAA9D,CAAyE,CAC3E,MACI,qBAAC,eAAD,EACI,UAAU,CAAC,EADf,CAEI,SAAS,CAAC,EAFd,CAGI,EAAE,CAAEN,EAHR,EADJ,CAOH,CARK,IASF,CACA,MAAO,KAAP,CACH,CACJ,CArBD,CAuBA,MACI,4BAAK,YAAU,QAAf,CAAwB,SAAS,CAAE,sBAAwBR,QAA3D,CAAqE,OAAO,CAAEG,cAA9E,EACI,2BAAK,SAAS,CAAC,gBAAf,EACKS,WAAW,EADhB,CADJ,CADJ,CAOH,EAED,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHlB,KAAK,CAAEkB,KAAK,CAACC,kBADV,CAEHX,QAAQ,CAAEU,KAAK,CAACE,YAFb,CAGHtB,eAAe,CAAEoB,KAAK,CAACG,eAAN,CAAsBvB,eAHpC,CAIHe,SAAS,CAAEK,KAAK,CAACG,eAAN,CAAsBR,SAJ9B,CAAP,CAMH,CAPD,CASA,cAAevB,CAAAA,OAAO,CAAC2B,eAAD,CAAkB,CAACzB,QAAQ,CAARA,QAAD,CAAWD,UAAU,CAAVA,UAAX,CAAlB,CAAP,CAAiDG,WAAjD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { clearIndex } from '../actions/Edit';\nimport { hideForm } from '../actions/Form';\nimport FormikComponent from './FormField';\n\nfunction FormWrapper(props) {\n    console.log(props.userIndexToEdit)\n    const showForm = props.state.display ? \"show\" : \"hide\"\n\n    const hideFormParent = (e) => {\n        if(e.target.dataset.name === 'parent'){\n            props.hideForm();\n            props.clearIndex()\n        }\n    }\n\n    const ln = props.allUsers.users.length + 1\n    console.log(ln)\n    const FormikMount = () => {\n        if(props.userIndexToEdit != undefined && props.writeMode === 'edit_mode'){\n            return (\n                <FormikComponent \n                    first_name={props.allUsers.users[props.userIndexToEdit].first_name} \n                    last_name={props.allUsers.users[props.userIndexToEdit].last_name}\n                    id={props.allUsers.users[props.userIndexToEdit].id}\n                />\n            ) \n        }else if(props.userIndexToEdit === undefined && props.writeMode === 'add_mode'){\n            return (\n                <FormikComponent \n                    first_name=\"\" \n                    last_name=\"\"\n                    id={ln}\n                />\n            )\n        }\n        else{\n            return null\n        }\n    }\n    \n    return (\n        <div data-name=\"parent\" className={\"form-wrapper-fixed \" + showForm} onClick={hideFormParent}>\n            <div className=\"form-container\">\n                {FormikMount()}   \n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        state: store.formDisplayReducer,\n        allUsers: store.usersReducer,\n        userIndexToEdit: store.editUserReducer.userIndexToEdit,\n        writeMode: store.editUserReducer.writeMode\n    }\n};\n\nexport default connect(mapStateToProps, {hideForm, clearIndex})(FormWrapper);\n"]},"metadata":{},"sourceType":"module"}