{"ast":null,"code":"var _jsxFileName = \"/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/App.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { usersAction, deleteUser } from './actions/Users';\nimport { showForm } from './actions/Form';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { addMode, clearIndex, editMode, getIndex } from './actions/Edit';\nimport FormWrapper from './component/FormWrapper';\n\nfunction App(props) {\n  useEffect(() => {\n    props.usersAction();\n  }, []);\n\n  const editForm = index => {\n    props.showForm();\n    props.getIndex(index);\n    props.editMode();\n  };\n\n  const addForm = () => {\n    props.showForm();\n    props.clearIndex();\n    props.addMode();\n  };\n\n  const currentUsers = [...props.state.users];\n\n  const confirmDeletion = idxToDelete => {\n    if (window.confirm('Delete user?')) {\n      props.deleteUser(currentUsers, idxToDelete);\n      console.log(props.isDelete);\n    } else {}\n  };\n\n  const usersItem = props.state.users.map((user, index) => {\n    return React.createElement(\"div\", {\n      className: \"main-container-items\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemsinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"First Name:\"), \" \", user.first_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Last Name:\"), \" \", user.last_name)), React.createElement(\"div\", {\n      className: \"main-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => editForm(index),\n      className: \"edit-btn \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"div\", {\n      onClick: () => confirmDeletion(index),\n      className: \"close-btn \" + isOneLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FaTrashAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"root-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"add-btn\",\n    onClick: addForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"+ Add user\"), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, usersItem)));\n}\n\nconst mapStateToProps = store => {\n  return {\n    state: store.usersReducer,\n    userIndexToEdit: store.editUserReducer.userIndexToEdit,\n    isDelete: store.editUserReducer.isDelete\n  };\n};\n\nexport default connect(mapStateToProps, {\n  usersAction,\n  showForm,\n  getIndex,\n  clearIndex,\n  editMode,\n  addMode,\n  deleteUser\n})(App);","map":{"version":3,"sources":["/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/App.js"],"names":["React","Fragment","useEffect","useState","connect","usersAction","deleteUser","showForm","FaTrashAlt","addMode","clearIndex","editMode","getIndex","FormWrapper","App","props","editForm","index","addForm","currentUsers","state","users","confirmDeletion","idxToDelete","window","confirm","console","log","isDelete","usersItem","map","user","first_name","last_name","isOneLeft","mapStateToProps","store","usersReducer","userIndexToEdit","editUserReducer"],"mappings":"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","sourcesContent":["\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {usersAction, deleteUser} from './actions/Users'\nimport { showForm } from './actions/Form'\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { addMode, clearIndex, editMode, getIndex } from './actions/Edit'\nimport FormWrapper from './component/FormWrapper'\n\n\nfunction App(props){\n    \n    useEffect(()=>{\n        props.usersAction()\n    }, [])\n\n    const editForm = (index) => {\n        props.showForm()\n        props.getIndex(index)\n        props.editMode()\n    }\n\n    const addForm = () => {\n        props.showForm()\n        props.clearIndex()\n        props.addMode()\n    }\n\n    const currentUsers = [...props.state.users]\n    const confirmDeletion = (idxToDelete) =>{\n        if(window.confirm('Delete user?')){\n            props.deleteUser(currentUsers, idxToDelete)\n            console.log(props.isDelete)\n        }else{        \n        } \n    }\n\n    const usersItem = \n        props.state.users.map((user, index) => {\n            return (\n                <div className=\"main-container-items\" key={index}>\n                    <div className=\"itemsinfo\">\n                        <div className=\"main-info\">\n                            <p><strong>First Name:</strong> {user.first_name}</p>\n                            <p><strong>Last Name:</strong> {user.last_name}</p>\n                        </div>\n                        <div className=\"main-btn\">\n                            <div onClick={() => editForm(index)} className=\"edit-btn \">EDIT</div>\n                            <div onClick={()=>confirmDeletion(index)} className={\"close-btn \"+ isOneLeft}><FaTrashAlt /></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            )\n        })\n\n\n    return (\n        <Fragment>\n           <FormWrapper/>\n            <div className=\"root-container\">\n                <button className=\"add-btn\" onClick={addForm}>+ Add user</button>\n                <div className=\"main-container\">\n                {usersItem}\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        state: store.usersReducer,\n        userIndexToEdit: store.editUserReducer.userIndexToEdit, \n        isDelete: store.editUserReducer.isDelete\n    }\n}\n\nexport default connect(mapStateToProps, {usersAction, showForm, getIndex, clearIndex, editMode, addMode, deleteUser})(App);"]},"metadata":{},"sourceType":"module"}