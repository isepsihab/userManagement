{"ast":null,"code":"import _toConsumableArray from\"/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{Fragment,useEffect,useState}from'react';import{connect}from'react-redux';import{usersAction,deleteUser}from'./actions/Users';import{showForm}from'./actions/Form';import{FaTrashAlt,FaEdit}from'react-icons/fa';import{addMode,clearIndex,editMode,getIndex}from'./actions/Edit';import FormWrapper from'./component/FormWrapper';function App(props){useEffect(function(){props.usersAction();},[]);var editForm=function editForm(index){props.showForm();props.getIndex(index);props.editMode();};var addForm=function addForm(){props.showForm();props.clearIndex();props.addMode();};var currentUsers=_toConsumableArray(props.state.users);var confirmDeletion=function confirmDeletion(idxToDelete){if(window.confirm('Delete user?')){props.deleteUser(currentUsers,idxToDelete);console.log(props.isDelete);}else{}};var usersItem=props.state.users.map(function(user,index){return React.createElement(\"div\",{className:\"main-container-items\",key:index},React.createElement(\"div\",{className:\"itemsinfo-Container\"},React.createElement(\"div\",{className:\"itemsinfo\"},React.createElement(\"div\",{className:\"main-info\"},React.createElement(\"p\",null,React.createElement(\"strong\",null,\"First Name:\"),\" \",user.first_name),React.createElement(\"p\",null,React.createElement(\"strong\",null,\"Last Name:\"),\" \",user.last_name)),React.createElement(\"div\",{className:\"main-btn\"},React.createElement(\"div\",{onClick:function onClick(){return editForm(index);},className:\"edit-btn \"},React.createElement(FaEdit,null)),React.createElement(\"div\",{onClick:function onClick(){return confirmDeletion(index);},className:\"delete-btn \"},React.createElement(FaTrashAlt,null))))));});return React.createElement(Fragment,null,React.createElement(FormWrapper,null),React.createElement(\"div\",{className:\"header\"},\"User Management\"),React.createElement(\"div\",{className:\"root-container\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"button\",{className:\"add-btn\",onClick:addForm},\"+ Add New\"),React.createElement(\"div\",{className:\"main-container\"},usersItem))));}var mapStateToProps=function mapStateToProps(store){return{state:store.usersReducer,userIndexToEdit:store.editUserReducer.userIndexToEdit,isDelete:store.editUserReducer.isDelete};};export default connect(mapStateToProps,{usersAction:usersAction,showForm:showForm,getIndex:getIndex,clearIndex:clearIndex,editMode:editMode,addMode:addMode,deleteUser:deleteUser})(App);","map":{"version":3,"sources":["/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/App.js"],"names":["React","Fragment","useEffect","useState","connect","usersAction","deleteUser","showForm","FaTrashAlt","FaEdit","addMode","clearIndex","editMode","getIndex","FormWrapper","App","props","editForm","index","addForm","currentUsers","state","users","confirmDeletion","idxToDelete","window","confirm","console","log","isDelete","usersItem","map","user","first_name","last_name","mapStateToProps","store","usersReducer","userIndexToEdit","editUserReducer"],"mappings":"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","sourcesContent":["\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {usersAction, deleteUser} from './actions/Users'\nimport { showForm } from './actions/Form'\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa';\nimport { addMode, clearIndex, editMode, getIndex } from './actions/Edit'\nimport FormWrapper from './component/FormWrapper'\n\n\nfunction App(props){\n    \n    useEffect(()=>{\n        props.usersAction()\n    }, [])\n\n    const editForm = (index) => {\n        props.showForm()\n        props.getIndex(index)\n        props.editMode()\n    }\n\n    const addForm = () => {\n        props.showForm()\n        props.clearIndex()\n        props.addMode()\n    }\n\n    const currentUsers = [...props.state.users]\n    const confirmDeletion = (idxToDelete) =>{\n        if(window.confirm('Delete user?')){\n            props.deleteUser(currentUsers, idxToDelete)\n            console.log(props.isDelete)\n        }else{        \n        } \n    }\n\n    const usersItem = \n        props.state.users.map((user, index) => {\n            return (\n                <div className=\"main-container-items\" key={index}>\n                    \n                    <div className=\"itemsinfo-Container\">\n                        <div className=\"itemsinfo\">\n                            <div className=\"main-info\">\n                                <p><strong>First Name:</strong> {user.first_name}</p>\n                                <p><strong>Last Name:</strong> {user.last_name}</p>\n                            </div>\n                            <div className=\"main-btn\">\n                                <div onClick={() => editForm(index)} className=\"edit-btn \"><FaEdit /></div>\n                                <div onClick={()=>confirmDeletion(index)} className={\"delete-btn \"}><FaTrashAlt /></div>\n                            </div>\n                        </div>\n                    </div>           \n                </div>\n            )\n        })\n\n\n    return (\n        <Fragment>\n           <FormWrapper/>\n           <div className=\"header\">User Management</div>\n            <div className=\"root-container\">\n                <div className=\"container\">\n                    <button className=\"add-btn\" onClick={addForm}>+ Add New</button>\n                    <div className=\"main-container\">\n                    {usersItem}\n                    </div>\n                </div>\n            </div>\n\n\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        state: store.usersReducer,\n        userIndexToEdit: store.editUserReducer.userIndexToEdit, \n        isDelete: store.editUserReducer.isDelete\n    }\n}\n\nexport default connect(mapStateToProps, {usersAction, showForm, getIndex, clearIndex, editMode, addMode, deleteUser})(App);"]},"metadata":{},"sourceType":"module"}