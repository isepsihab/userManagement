{"ast":null,"code":"var _jsxFileName = \"/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/component/App.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { usersAction, showForm, getIndex, clearIndex, editMode, addMode, deleteUser } from '../actions';\nimport FormWrapper from './FormWrapper';\n\nfunction App(props) {\n  useEffect(() => {\n    props.usersAction();\n  }, []);\n\n  const editForm = index => {\n    props.showForm();\n    props.getIndex(index);\n    props.editMode();\n  };\n\n  const addForm = () => {\n    props.showForm();\n    props.clearIndex();\n    props.addMode();\n  };\n\n  const currentUsers = [...props.state.users];\n\n  const confirmDeletion = idxToDelete => {\n    if (window.confirm('Delete user?')) {\n      props.deleteUser(currentUsers, idxToDelete);\n      console.log(props.isDelete);\n    } else {}\n  };\n\n  let isOneLeft = \"show-delete-btn\";\n\n  if (props.state.users.length < 2) {\n    isOneLeft = \"hide-delete-btn\";\n  } else {\n    isOneLeft = \"show-delete-btn\";\n  } //console.log(props.state.users)\n  //needs to check length, since network request takes time to complete\n  //else, Array.map function won't work because there is no array\n  //WELL, actually, you can map an empty array, it's just the initial state needs to be an array\n  //even if the array is empty you can do something like:\n  //const arr = [];\n  //const newarr = arr.map(items => {\n  //console.log(items.i) ==> undefined\n  //that's ok, when network request finished, return the array of data\n  //})\n  //UNLESS ! you want to do something before the data arrived\n  //maybe show some loading gifs, then you need to check the length\n  //app will render the gif first => done => componentmount => actions => update state => re-render => done\n\n\n  const usersItem = //props.state.users.length > 0 ? (\n  props.state.users.map((user, index) => {\n    return React.createElement(\"div\", {\n      className: \"main-container-items\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itemsinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: user.avatar,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"First Name:\"), \" \", user.first_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Last Name:\"), \" \", user.last_name), React.createElement(\"div\", {\n      onClick: () => confirmDeletion(index),\n      className: \"close-btn \" + isOneLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      onClick: () => editForm(index),\n      className: \"edit-btn \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"EDIT\"));\n  }); // ) : (\n  // <p>loading...</p>\n  //)\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"topbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"User Management System\", React.createElement(\"button\", {\n    className: \"add-btn\",\n    onClick: addForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Add user\")), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, usersItem));\n}\n\nconst mapStateToProps = store => {\n  return {\n    state: store.usersReducer,\n    userIndexToEdit: store.editUserReducer.userIndexToEdit,\n    isDelete: store.editUserReducer.isDelete\n  };\n};\n\nexport default connect(mapStateToProps, {\n  usersAction,\n  showForm,\n  getIndex,\n  clearIndex,\n  editMode,\n  addMode,\n  deleteUser\n})(App);","map":{"version":3,"sources":["/Users/Ucing/Desktop/FE Test Review/FE TEST USER MANAGEMENT/user-management/src/component/App.js"],"names":["React","Fragment","useEffect","useState","connect","usersAction","showForm","getIndex","clearIndex","editMode","addMode","deleteUser","FormWrapper","App","props","editForm","index","addForm","currentUsers","state","users","confirmDeletion","idxToDelete","window","confirm","console","log","isDelete","isOneLeft","length","usersItem","map","user","avatar","first_name","last_name","mapStateToProps","store","usersReducer","userIndexToEdit","editUserReducer"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,WAAR,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,QAArD,EAA+DC,OAA/D,EAAwEC,UAAxE,QAAyF,YAAzF;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAEfZ,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,KAAK,CAACT,WAAN;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AACxBF,IAAAA,KAAK,CAACR,QAAN;AACAQ,IAAAA,KAAK,CAACP,QAAN,CAAeS,KAAf;AACAF,IAAAA,KAAK,CAACL,QAAN;AACH,GAJD;;AAMA,QAAMQ,OAAO,GAAG,MAAM;AAClBH,IAAAA,KAAK,CAACR,QAAN;AACAQ,IAAAA,KAAK,CAACN,UAAN;AACAM,IAAAA,KAAK,CAACJ,OAAN;AACH,GAJD;;AAMA,QAAMQ,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAACK,KAAN,CAAYC,KAAhB,CAArB;;AACA,QAAMC,eAAe,GAAIC,WAAD,IAAgB;AACpC,QAAGC,MAAM,CAACC,OAAP,CAAe,cAAf,CAAH,EAAkC;AAC9BV,MAAAA,KAAK,CAACH,UAAN,CAAiBO,YAAjB,EAA+BI,WAA/B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,QAAlB;AACH,KAHD,MAGK,CAEJ;AAGJ,GATD;;AAWA,MAAIC,SAAS,GAAG,iBAAhB;;AACA,MAAGd,KAAK,CAACK,KAAN,CAAYC,KAAZ,CAAkBS,MAAlB,GAA2B,CAA9B,EAAgC;AAC5BD,IAAAA,SAAS,GAAG,iBAAZ;AACH,GAFD,MAEK;AACDA,IAAAA,SAAS,GAAG,iBAAZ;AACH,GAnCc,CAqCf;AAEA;AACA;AAEA;AACA;AACA;AACA;AACI;AACA;AACJ;AAEA;AACA;AACA;;;AAEA,QAAME,SAAS,GAAG;AACdhB,EAAAA,KAAK,CAACK,KAAN,CAAYC,KAAZ,CAAkBW,GAAlB,CAAsB,CAACC,IAAD,EAAOhB,KAAP,KAAiB;AACnC,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAEA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEgB,IAAI,CAACC,MAAf;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAAiCD,IAAI,CAACE,UAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,OAAgCF,IAAI,CAACG,SAArC,CAHJ,EAII;AAAK,MAAA,OAAO,EAAE,MAAId,eAAe,CAACL,KAAD,CAAjC;AAA0C,MAAA,SAAS,EAAE,eAAcY,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADJ,EAOI;AAAK,MAAA,OAAO,EAAE,MAAMb,QAAQ,CAACC,KAAD,CAA5B;AAAqC,MAAA,SAAS,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAaH,GAdD,CADJ,CAtDe,CAsEhB;AACI;AACH;;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAFJ,EAMI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIa,SADJ,CANJ,CADJ;AAYH;;AAED,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,KAAK,EAAEkB,KAAK,CAACC,YADV;AAEHC,IAAAA,eAAe,EAAEF,KAAK,CAACG,eAAN,CAAsBD,eAFpC;AAGHZ,IAAAA,QAAQ,EAAEU,KAAK,CAACG,eAAN,CAAsBb;AAH7B,GAAP;AAKH,CAND;;AAUA,eAAevB,OAAO,CAACgC,eAAD,EAAkB;AAAC/B,EAAAA,WAAD;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,UAAlC;AAA8CC,EAAAA,QAA9C;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA;AAAjE,CAAlB,CAAP,CAAuGE,GAAvG,CAAf","sourcesContent":["\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {usersAction, showForm, getIndex, clearIndex, editMode, addMode, deleteUser} from '../actions'\nimport FormWrapper from './FormWrapper'\n\n\nfunction App(props){\n    \n    useEffect(()=>{\n        props.usersAction()\n    }, [])\n\n    const editForm = (index) => {\n        props.showForm()\n        props.getIndex(index)\n        props.editMode()\n    }\n\n    const addForm = () => {\n        props.showForm()\n        props.clearIndex()\n        props.addMode()\n    }\n\n    const currentUsers = [...props.state.users]\n    const confirmDeletion = (idxToDelete) =>{\n        if(window.confirm('Delete user?')){\n            props.deleteUser(currentUsers, idxToDelete)\n            console.log(props.isDelete)\n        }else{\n            \n        }\n\n       \n    }\n\n    let isOneLeft = \"show-delete-btn\"\n    if(props.state.users.length < 2){\n        isOneLeft = \"hide-delete-btn\"\n    }else{\n        isOneLeft = \"show-delete-btn\"\n    }\n   \n    //console.log(props.state.users)\n\n    //needs to check length, since network request takes time to complete\n    //else, Array.map function won't work because there is no array\n\n    //WELL, actually, you can map an empty array, it's just the initial state needs to be an array\n    //even if the array is empty you can do something like:\n    //const arr = [];\n    //const newarr = arr.map(items => {\n        //console.log(items.i) ==> undefined\n        //that's ok, when network request finished, return the array of data\n    //})\n\n    //UNLESS ! you want to do something before the data arrived\n    //maybe show some loading gifs, then you need to check the length\n    //app will render the gif first => done => componentmount => actions => update state => re-render => done\n\n    const usersItem = //props.state.users.length > 0 ? (\n        props.state.users.map((user, index) => {\n            return (\n                <div className=\"main-container-items\" key={index}>\n                    <div className=\"itemsinfo\">\n                        <img src={user.avatar} alt=\"\"/>\n                        <p><strong>First Name:</strong> {user.first_name}</p>\n                        <p><strong>Last Name:</strong> {user.last_name}</p>\n                        <div onClick={()=>confirmDeletion(index)} className={\"close-btn \"+ isOneLeft}>X</div>\n                    </div>\n                    <div onClick={() => editForm(index)} className=\"edit-btn \">\n                        EDIT\n                    </div>\n                </div>\n            )\n        })\n   // ) : (\n       // <p>loading...</p>\n    //)\n\n\n    return (\n        <Fragment>\n           <FormWrapper/>\n            <div className=\"topbar\">\n                User Management System\n                <button className=\"add-btn\" onClick={addForm}>Add user</button>\n            </div>\n            <div className=\"main-container\">\n               {usersItem}\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        state: store.usersReducer,\n        userIndexToEdit: store.editUserReducer.userIndexToEdit, \n        isDelete: store.editUserReducer.isDelete\n    }\n}\n\n\n\nexport default connect(mapStateToProps, {usersAction, showForm, getIndex, clearIndex, editMode, addMode, deleteUser})(App);"]},"metadata":{},"sourceType":"module"}